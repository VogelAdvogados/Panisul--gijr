openapi: 3.0.3
info:
  title: PaniSul API
  version: 1.0.0
  description: API v1 do sistema PaniSul
servers:
  - url: /api/v1
paths:
  /auth/demo:
    get:
      summary: Gera um token de demonstração (ADMIN)
      tags: [Auth]
      responses:
        '200':
          description: Token gerado
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AuthToken'
  /auth/register:
    post:
      summary: Registrar usuário
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUserDTO'
      responses:
        '201':
          description: Usuário registrado
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AuthToken'
  /auth/login:
    post:
      summary: Login
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginDTO'
      responses:
        '200':
          description: Login efetuado
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/AuthToken'
  /products:
    get:
      summary: Listar produtos
      tags: [Produtos]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de produtos
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Product'
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão
  /clients:
    get:
      summary: Listar clientes
      tags: [Clientes]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de clientes
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/Client'
    post:
      summary: Criar cliente
      tags: [Clientes]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateClientDTO'
      responses:
        '201':
          description: Cliente criado
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Client'
  /receivables:
    get:
      summary: Recebíveis abertos
      tags: [Financeiro]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Lista de recebíveis
  /receivables/{id}/baixa:
    post:
      summary: Baixar (pagar) recebível
      tags: [Financeiro]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Recebível baixado
  /sales:
    post:
      summary: Registrar venda
      tags: [Vendas]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSaleDTO'
      responses:
        '201':
          description: Venda registrada com sucesso
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Sale'
        '400':
          description: Erro de validação
        '401':
          description: Não autenticado
        '403':
          description: Sem permissão
        '422':
          description: Regra de negócio violada (ex. estoque insuficiente)
        '500':
          description: Erro interno do servidor
  /sales/{id}:
    get:
      summary: Obter venda por ID
      tags: [Vendas]
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Venda encontrada
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ApiResponse'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/Sale'
        '400':
          description: Parâmetros inválidos
        '401':
          description: Não autenticado
        '404':
          description: Venda não encontrada
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    ApiError:
      type: object
      properties:
        code:
          type: string
          enum: [ESTOQUE.INSUFICIENTE, VALIDACAO.CAMPO_OBRIGATORIO, AUTH.NAO_AUTORIZADO]
        message:
          type: string
    ApiResponse:
      type: object
      properties:
        success:
          type: boolean
        data:
          nullable: true
        message:
          type: string
          nullable: true
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ApiError'
        meta:
          type: object
          properties:
            traceId:
              type: string
    RegisterUserDTO:
      type: object
      required: [name, email, password, role]
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        role:
          type: string
          enum: [ADMIN, VENDEDOR, PRODUCAO]
    LoginDTO:
      type: object
      required: [email, password]
      properties:
        email:
          type: string
        password:
          type: string
    AuthToken:
      type: object
      properties:
        token:
          type: string
    CreateSaleDTO:
      type: object
      required: [clientId, items, paymentType]
      properties:
        clientId:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/SaleItem'
          minItems: 1
        paymentType:
          type: string
          enum: [AVISTA, APRAZO]
        dueDate:
          type: string
          format: date-time
          nullable: true
    SaleItem:
      type: object
      required: [productId, quantity, price]
      properties:
        productId:
          type: string
        quantity:
          type: number
          minimum: 0
        price:
          type: number
          minimum: 0
    Sale:
      type: object
      properties:
        id:
          type: string
          format: uuid
        createdAt:
          type: string
          format: date-time
        clientId:
          type: string
        totalValue:
          type: number
        paymentType:
          type: string
          enum: [AVISTA, APRAZO]
        dueDate:
          type: string
          format: date-time
          nullable: true
    Product:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        stockQty:
          type: number
        costAvg:
          type: number
    Client:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
    CreateClientDTO:
      type: object
      required: [name]
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string